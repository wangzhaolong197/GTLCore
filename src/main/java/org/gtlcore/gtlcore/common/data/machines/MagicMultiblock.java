package org.gtlcore.gtlcore.common.data.machines;

import org.gtlcore.gtlcore.api.machine.multiblock.*;
import org.gtlcore.gtlcore.common.data.*;
import org.gtlcore.gtlcore.utils.Registries;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.data.RotationState;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.machine.multiblock.WorkableElectricMultiblockMachine;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.Predicates;
import com.gregtechceu.gtceu.common.data.*;

import net.minecraft.resources.ResourceLocation;

import static org.gtlcore.gtlcore.api.registries.GTLRegistration.REGISTRATE;

public class MagicMultiblock {

    public static void init() {}

    /// *远古之门祭坛*
    public final static MultiblockMachineDefinition ANCIENT_ECHOES_ALTAR = REGISTRATE.multiblock("ancient_echoes_altar", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.YUANHU_HUIXIANG)
            .appearanceBlock(GTBlocks.CASING_STAINLESS_CLEAN)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("                                            ", "             AAAAAAAHHHHAAAAAAA             ", "                   B    B                   ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("             AAAAAAAAHHAAAAAAAA             ", "        AAAAACCCCCCCCCCCCCCCCCCAAAAA        ", "             DADADADAHHADADADAD             ", "             E E E EB  BE E E E             ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("        AAAAA                  AAAAA        ", "    AAAACCCCC                  CCCCCAAAA    ", "        ADADA                  ADADA        ", "         E E                    E E         ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("    AAAA                            AAAA    ", "   ACCCC                            CCCCA   ", "    ADAD                            DADA    ", "     E E                            E E     ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("   A                                    A   ", " AAC                                    CAA ", "   D                                    D   ", "   E                                    E   ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle(" AA                                      AA ", "ACC                                      CCA", " AA                                      AA ", " B                                        B ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle(" A                                        A ", "AC         FFFFFFFFFFFFFFFFFFFFFF         CA", "BD         F                    F         DB", " E         F                    F         E ", "           F                    F           ", "           F                    F           ", "           F                    F           ", "           F                    F           ", "           FFFFFFFFFFFFFFFFFFFFFF           ")
                    .aisle(" AA                                      AA ", "ACC                                      CCA", " AA                                      AA ", " B                                        B ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("   A                                    A   ", " AAC                                    CAA ", "   D                                    D   ", "   E                                    E   ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("    AAAA                            AAAA    ", "   ACCCC                            CCCCA   ", "    ADAD                            DADA    ", "     E E                            E E     ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("        AAAAA                  AAAAA        ", "    AAAACCCCC                  CCCCCAAAA    ", "        ADADA                  ADADA        ", "         E E                    E E         ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("             AAAAAAAAHHAAAAAAAA             ", "        AAAAACCCCCCCCCCCCCCCCCCAAAAA        ", "             DADADADAHHADADADAD             ", "             E E E EB  BE E E E             ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .aisle("                                            ", "             AAAAAAAHIHHAAAAAAA             ", "                   B    B                   ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ", "                                            ")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("H", Predicates.blocks(Registries.getBlock("minecraft:stone_bricks"))
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("D", Predicates.blocks(Registries.getBlock("minecraft:soul_sand")))
                    .where("B", Predicates.blocks(Registries.getBlock("minecraft:candle")))
                    .where("F", Predicates.blocks(Registries.getBlock("minecraft:reinforced_deepslate")))
                    .where("A", Predicates.blocks(Registries.getBlock("minecraft:stone_bricks")))
                    .where("E", Predicates.blocks(Registries.getBlock("minecraft:soul_fire")))
                    .where("I", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("C", Predicates.blocks(GTLBlocks.MAGIC_COIL_LOW_BLOCK.get()))
                    .build())
            .workableCasingRenderer(new ResourceLocation("minecraft:block/stone_bricks"), new ResourceLocation("minecraft:block/stone_bricks"))
            .register();

    /// *秘法启示台*
    public final static MultiblockMachineDefinition MYSTIC_REVELATION_PLATFORM = REGISTRATE.multiblock("mystic_revelation_platform", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.ANZHU_QIHUI)
            .appearanceBlock(GTBlocks.CASING_STAINLESS_CLEAN)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         B B         ", "         B B         ", "         BBB         ", "          E          ", "          B          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         B B         ", "         DED         ", "         EEE         ", "         EEE         ", "         DED         ", "          D          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         D D         ", "         EEE         ", "         EDE         ", "         D D         ", "         D D         ", "         EDE         ", "         EEE         ", "         DED         ", "          D          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         D D         ", "        DDFDD        ", "        DFFFD        ", "         D D         ", "                     ", "                     ", "                     ", "                     ", "                     ", "         DED         ", "          E          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         D D         ", "        DEEED        ", "        EEEEE        ", "        EEFEE        ", "       FFEGEFF       ", "         H H         ", "                     ", "                     ", "                     ", "                     ", "                     ", "          I          ", "          E          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "          B          ", "          B          ", "          J          ", "          J          ", "         JJJ         ", "       HJJFJJH       ", "      FEEHKHEEF      ", "       DH   HD       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "          D          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "          B          ", "          JM         ", "        MMJM         ", "        MJJJ         ", "       HJJFJJH       ", "      HJJLFLJJH      ", "     FEEHGKGHEEF     ", "      DF  G  FD      ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "          J          ", "         JJM         ", "        JJJJ M       ", "     D  JJJJJM D     ", "     E JJDFDJJ E     ", "    DEJJLDGDLJJED    ", "    DFEHEEGEEHEFD    ", "      H H G H H      ", "          G          ", "                     ", "                     ", "                     ", "                     ", "                     ", "          N          ", "          NN         ", "         NNN         ", "         NNN         ", "          N          ", "          N          ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "          J          ", "         JJJ         ", "        JJJJ         ", "     D JJJJJJM D     ", "     E JJJJJJJ E     ", "    DEJJDHFHDJJED    ", "    DEJLD H DLJED    ", "   DFEHGE   EGHEFD   ", " BBEDH         HDEBB ", " BDE             EDB ", " BED             DEB ", "  ED             DE  ", "  DE      N      ED  ", "   E      N      E   ", "   DD     NN    DD   ", "         NAN         ", "         NAAN        ", "        NAAAN        ", "        NAAAN        ", "         NAN         ", "         NAN         ", "          NN         ", "          N          ", "                     ")
                    .aisle("          M          ", "          B          ", "        MMJ          ", "        MJJJ         ", "      BBJJJJJBB      ", "      BJJJJJJJB      ", "      JJJJJJJJJ      ", "     EJJJJJJJJJE     ", "     EJFFFFFFFJE     ", "    FFFFGH HGFFFF    ", "    FGKKG   GKKGF    ", "   E   GG   GG   E   ", "  ED    G   G    DE  ", "BBE               EBB", "BCE       N       EEB", "BBED     NAN     DEBB", "  DE     NAN     ED  ", "   EEI   NAAN  IEE   ", "   DEED NAAAN DEED   ", "        NAAAN        ", "        NAAAN        ", "        NAAAN        ", "        NAAAN        ", "         NAAN        ", "         NAAN        ", "         NAN         ", "          N          ")
                    .aisle("                     ", "                     ", "                     ", "          J          ", "          JJ         ", "        JJJJJ        ", "     D JJJJJJJ D     ", "     E JJJJJJJJE     ", "    DEJJDHFHDJJED    ", "    DEJLD H DLJED    ", "   DFEHGE   EGHEFD   ", " BBEDH         HDEBB ", " BDE             EDB ", " BED             DEB ", "  ED             DE  ", "  DE      N      ED  ", "   E      N      E   ", "   DD    NAN    DD   ", "         NAN         ", "        NAAN         ", "        NAAAN        ", "         NAAN        ", "         NAAN        ", "         NAN         ", "          NN         ", "          N          ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "          J          ", "         JJJ         ", "        JJJJM        ", "     D  JJJJMM D     ", "     E JJDFDJJ E     ", "    DEJJLDGDLJJED    ", "    DFEHEEGEEHEFD    ", "      H H G H H      ", "          G          ", "                     ", "                     ", "                     ", "                     ", "          N          ", "          N          ", "         NN          ", "         NNN         ", "          NN         ", "          NN         ", "          N          ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "          B          ", "          J          ", "        MMJJ         ", "        MJJJM        ", "       HJJFJJH       ", "      HJJLFLJJH      ", "     FEEHGKGHEEF     ", "      DF  G  FD      ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "          B          ", "          B          ", "          J          ", "         JJJ         ", "        JJJJ         ", "       HJJFJJH       ", "      FEEHKHEEF      ", "       DH   HD       ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "          D          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         D D         ", "        DEEED        ", "        EEEEE        ", "        EEFEE        ", "       FFEGEFF       ", "         H H         ", "                     ", "                     ", "                     ", "                     ", "                     ", "          I          ", "          E          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         D D         ", "        DDFDD        ", "        DFFFD        ", "         D D         ", "                     ", "                     ", "                     ", "                     ", "                     ", "         DDD         ", "          E          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         D D         ", "         EEE         ", "         EDE         ", "         D D         ", "         D D         ", "         EDE         ", "         EEE         ", "         DED         ", "          D          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         B B         ", "         DED         ", "         EEE         ", "         EEE         ", "         DED         ", "          D          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         B B         ", "         B B         ", "         BBB         ", "          E          ", "          B          ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
                    .aisle
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("J", Predicates.blocks(Registries.getBlock("minecraft:dirt")))
                    .where("K", Predicates.blocks(Registries.getBlock("gtceu:treated_wood_slab")))
                    .where("F", Predicates.blocks(Registries.getBlock("minecraft:chiseled_stone_bricks")))
                    .where("I", Predicates.blocks(Registries.getBlock("minecraft:stone_brick_slab")))
                    .where("C", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("G", Predicates.blocks(Registries.getBlock("gtceu:treated_wood_stairs")))
                    .where("E", Predicates.blocks(Registries.getBlock("minecraft:stone_bricks")))
                    .where("H", Predicates.blocks(Registries.getBlock("minecraft:stone_slab")))
                    .where("D", Predicates.blocks(Registries.getBlock("minecraft:stone_brick_stairs")))
                    .where("N", Predicates.blocks(Registries.getBlock("minecraft:purple_stained_glass")))
                    .where("B", Predicates.blocks(Registries.getBlock("minecraft:cobblestone_wall")))
                    .where("M", Predicates.blocks(Registries.getBlock("minecraft:oak_fence")))
                    .where("A", Predicates.blocks(GTLBlocks.MAGIC_MECHANICAL_LOW_CUBE.get()))
                    .where("L", Predicates.blocks(Registries.getBlock("minecraft:sea_lantern")))
                    .build())
            .workableCasingRenderer(new ResourceLocation("minecraft:block/stone_bricks"), GTCEu.id("block/multiblock/vacuum_freezer"))
            .register();
}
